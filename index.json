{
  "index.html": {
    "href": "index.html",
    "title": "Cake.AzCopy | Cake.AzCopy",
    "keywords": "Cake.AzCopy A simple Cake addin powered by AzCopy for uploading and downloading to/from Azure Storage (including Blob, Table and Files). Using this documentation: Click the tabs at the top of the page to navigate: Documentation : General documentation Reference : Full API documentation"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API documentation | Cake.AzCopy",
    "keywords": "API documentation Use the links on the left to navigate the addin's API. Raise any issues on GitHub , even against the documentation."
  },
  "api/Cake.AzCopy.AzCopyAliases.html": {
    "href": "api/Cake.AzCopy.AzCopyAliases.html",
    "title": "Class AzCopyAliases | Cake.AzCopy",
    "keywords": "Class AzCopyAliases Inheritance System.Object AzCopyAliases Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Cake.AzCopy Assembly : Cake.AzCopy.dll Syntax [CakeNamespaceImport(\"Cake.AzCopy\")] [CakeAliasCategory(\"Azure\")] public static class AzCopyAliases Methods | Improve this Doc View Source AzCopy(ICakeContext, String, String) Declaration [CakeMethodAlias] public static void AzCopy(this ICakeContext ctx, string source, string destination) Parameters Type Name Description Cake.Core.ICakeContext ctx System.String source System.String destination | Improve this Doc View Source AzCopy(ICakeContext, String, String, AzCopySettings) Declaration [CakeMethodAlias] public static void AzCopy(this ICakeContext ctx, string source, string destination, AzCopySettings settings) Parameters Type Name Description Cake.Core.ICakeContext ctx System.String source System.String destination AzCopySettings settings | Improve this Doc View Source AzCopy(ICakeContext, String, String, Action<AzCopySettings>) Declaration [CakeMethodAlias] public static void AzCopy(this ICakeContext ctx, string source, string destination, Action<AzCopySettings> configure) Parameters Type Name Description Cake.Core.ICakeContext ctx System.String source System.String destination System.Action < AzCopySettings > configure"
  },
  "api/Cake.AzCopy.PayloadFormat.html": {
    "href": "api/Cake.AzCopy.PayloadFormat.html",
    "title": "Enum PayloadFormat | Cake.AzCopy",
    "keywords": "Enum PayloadFormat Namespace : Cake.AzCopy Assembly : Cake.AzCopy.dll Syntax public enum PayloadFormat Fields Name Description CSV Default JSON"
  },
  "doc/contributing.html": {
    "href": "doc/contributing.html",
    "title": "Contributing | Cake.AzCopy",
    "keywords": "Contributing This is very much an active project so any and all contributions are welcome, even just finding issues! Reporting issues All issues should be tracked on GitHub , with enough information to reproduce the issue. Code Contributions This repository is based around the Git Flow workflow, using feature branches and pull requests to manage incoming changes and fixes. Generally speaking you can follow the same guidance as Cake itself (found here ), which can be summarised as follows: Find a change or fix you want to implement Fork the repo Create a new branch named feature/<your-feature-name> and make your changes Open a PR from your feature branch against the develop branch (include the GitHub issue number for fixes) Success! I will provide feedback if needed, or just accept the changes directly and they should appear in the next release License Note that this project (and all contributions) fall under the MIT License terms."
  },
  "doc/intro.html": {
    "href": "doc/intro.html",
    "title": "Getting Started | Cake.AzCopy",
    "keywords": "Getting Started Install AzCopy First, you'll need to make sure you have AzCopy installed. You can find the full documentation of how to install AzCopy for Windows here and AzCopy for Linux here . Since this addin relies on the underlying AzCopy CLI to perform copy operations, it runs on either Linux or Windows Warning Since AzCopy is not supported on macOS, this addin is also not supported for macOS. [!INFO] For this addin to work, you need to make sure one of AzCopy.exe or azcopy is available in the PATH or the tools/ folder. Including the addin At the top of your script, just add the following to install the addin: #addin nuget:?package=Cake.AzCopy Usage The addin exposes a single (overloaded) method alias AzCopy to use when for copy operations. To use the defaults, just run the AzCopy(string, string) alias: AzCopy(\"https://myaccount.blob.core.windows.net/mycontainer/\", \"~/temp/\"); To use the fluent settings API, just run the AzCopy(string, string, Action<AzCopySettings>) alias: AzCopy(\"https://myaccount.blob.core.windows.net/mycontainer/\", \"~/temp/\", settings => settings.UsePattern(\"*.txt\")); To use the object settings API, just run the AzCopy(string, string, AzCopySettings) alias: var settings = new AzCopySettings { Pattern = \"*.txt\" }; AzCopy(\"https://myaccount.blob.core.windows.net/mycontainer/\", \"~/temp/\", settings); The addin will take care of adapting the commands and options to the platform your build is running on. Settings Full information on the various settings available is provided in the Settings documentation ."
  },
  "doc/packages.html": {
    "href": "doc/packages.html",
    "title": "Packages | Cake.AzCopy",
    "keywords": "Packages You can include the addin in your script with: #addin nuget:?package=Cake.AzCopy //or to use the latest development release #addin nuget:?package=Cake.AzCopy&prerelease The NuGet prerelease packages are automatically built and deployed from the develop branch so they can be considered bleeding-edge while the non-prerelease packages will be much more stable. Versioning is predominantly SemVer-compliant so you can set your version constraints if you're worried about changes. Note These packages do not include AzCopy itself so you will need to have that available in your environment first."
  },
  "doc/settings.html": {
    "href": "doc/settings.html",
    "title": "Settings | Cake.AzCopy",
    "keywords": "Settings This Cake addin supports the majority of the options supported by the AzCopy CLI. Note, however, that there are some options which are ignored when running on Linux due to the Linux version of AzCopy not supporting all functionality. This addin supports both a fluent settings API and an object-oriented API. What does this look like in practice? A full example of the fluent API: AzCopy(source, destination, settings => settings.UsePattern(\"*.txt\") .UseDestinationAccountKey(accountKey) // or UseDestinationSignature .UseSourceAccountKey(accountKey) // or UseSourceSignature .CopyRecursively() .SetBlobType(BlobType.Block) .EnableChecksums() .LogToFile(\"./logfile\") // ignored on Linux .AddResponseFile(\"./parameters.txt\") .SetFileBehaviour(FileHandling.ExcludeNewer|FileHandling.UpdateLastModified) .UseDelimiter(':') .SetConcurrentOperationsCount(512) .SetContentType(\"text/plain\") ); A full example of the object API: var settings = new AzCopySettings { Pattern = \"*.txt\", DestinationKey = accountKey, // or DestinationSAS SourceKey = sourceKey, // or SourceSAS Recursive = true, BlobType = BlobType.Block, UseChecksum = true, LogFile = \"./logfile\" // ignored on Linux ParameterFiles = new List<string> { \"./parameters.txt\" }, FileHandlingBehaviour = FileHandling.ExcludeNewer|FileHandling.UpdateLastModified, Delimiter = ':', ConcurrentOperations = 512, TargetContentType = \"text/plain\" }; AzCopy(source, destination, settings);"
  },
  "api/Cake.AzCopy.AzCopySettings.html": {
    "href": "api/Cake.AzCopy.AzCopySettings.html",
    "title": "Class AzCopySettings | Cake.AzCopy",
    "keywords": "Class AzCopySettings Inheritance System.Object Cake.Core.Tooling.ToolSettings AzCopySettings Inherited Members Cake.Core.Tooling.ToolSettings.ToolPath Cake.Core.Tooling.ToolSettings.ToolTimeout Cake.Core.Tooling.ToolSettings.WorkingDirectory Cake.Core.Tooling.ToolSettings.ArgumentCustomization Cake.Core.Tooling.ToolSettings.EnvironmentVariables System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Cake.AzCopy Assembly : Cake.AzCopy.dll Syntax public class AzCopySettings : ToolSettings Properties | Improve this Doc View Source BlobType Declaration public BlobType? BlobType { get; set; } Property Value Type Description System.Nullable < BlobType > | Improve this Doc View Source ConcurrentOperations Declaration public int ConcurrentOperations { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Delimiter Declaration public char ? Delimiter { get; set; } Property Value Type Description System.Nullable < System.Char > | Improve this Doc View Source DestinationKey Declaration public string DestinationKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source DestinationSAS Declaration public string DestinationSAS { get; set; } Property Value Type Description System.String | Improve this Doc View Source FileHandlingBehaviour Declaration public FileHandling? FileHandlingBehaviour { get; set; } Property Value Type Description System.Nullable < FileHandling > | Improve this Doc View Source LogFile Declaration public FilePath LogFile { get; set; } Property Value Type Description Cake.Core.IO.FilePath Remarks This value is ignored when running on Linux | Improve this Doc View Source ParameterFiles Declaration public List<FilePath> ParameterFiles { get; set; } Property Value Type Description System.Collections.Generic.List < Cake.Core.IO.FilePath > | Improve this Doc View Source Pattern Declaration public string Pattern { get; set; } Property Value Type Description System.String | Improve this Doc View Source PayloadFormat Declaration public PayloadFormat PayloadFormat { get; set; } Property Value Type Description PayloadFormat Remarks This value is ignored when running on Linux | Improve this Doc View Source Recursive Declaration public bool Recursive { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SourceKey Declaration public string SourceKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source SourceSAS Declaration public string SourceSAS { get; set; } Property Value Type Description System.String | Improve this Doc View Source TargetContentType Declaration public string TargetContentType { get; set; } Property Value Type Description System.String | Improve this Doc View Source UseChecksum Declaration public bool UseChecksum { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source BuildLinuxArguments(ProcessArgumentBuilder) Declaration public ProcessArgumentBuilder BuildLinuxArguments(ProcessArgumentBuilder args) Parameters Type Name Description Cake.Core.IO.ProcessArgumentBuilder args Returns Type Description Cake.Core.IO.ProcessArgumentBuilder | Improve this Doc View Source BuildWindowsArguments(ProcessArgumentBuilder) Declaration public ProcessArgumentBuilder BuildWindowsArguments(ProcessArgumentBuilder args) Parameters Type Name Description Cake.Core.IO.ProcessArgumentBuilder args Returns Type Description Cake.Core.IO.ProcessArgumentBuilder Extension Methods AzCopySettingsExtensions.UsePattern(AzCopySettings, String) AzCopySettingsExtensions.UseDestinationAccountKey(AzCopySettings, String) AzCopySettingsExtensions.UseSourceAccountKey(AzCopySettings, String) AzCopySettingsExtensions.UseDestinationSignature(AzCopySettings, String) AzCopySettingsExtensions.UseSourceSignature(AzCopySettings, String) AzCopySettingsExtensions.CopyRecursively(AzCopySettings, Boolean) AzCopySettingsExtensions.SetBlobType(AzCopySettings, String) AzCopySettingsExtensions.SetBlobType(AzCopySettings, BlobType) AzCopySettingsExtensions.EnableChecksums(AzCopySettings, Boolean) AzCopySettingsExtensions.LogToFile(AzCopySettings, FilePath) AzCopySettingsExtensions.AddResponseFile(AzCopySettings, FilePath) AzCopySettingsExtensions.SetFileBehaviour(AzCopySettings, FileHandling) AzCopySettingsExtensions.UseDelimiter(AzCopySettings, Char) AzCopySettingsExtensions.SetConcurrentOperationsCount(AzCopySettings, Int32) AzCopySettingsExtensions.SetContentType(AzCopySettings, String) AzCopySettingsExtensions.SetPayloadFormat(AzCopySettings, PayloadFormat) AzCopySettingsExtensions.SetPayloadFormat(AzCopySettings, String)"
  },
  "api/Cake.AzCopy.FileHandling.html": {
    "href": "api/Cake.AzCopy.FileHandling.html",
    "title": "Enum FileHandling | Cake.AzCopy",
    "keywords": "Enum FileHandling Namespace : Cake.AzCopy Assembly : Cake.AzCopy.dll Syntax [Flags] public enum FileHandling Fields Name Description ArchiveOnly ExcludeNewerSource ExcludeOlderSource UpdateLastModified"
  },
  "api/Cake.AzCopy.html": {
    "href": "api/Cake.AzCopy.html",
    "title": "Namespace Cake.AzCopy | Cake.AzCopy",
    "keywords": "Namespace Cake.AzCopy Classes AzCopyAliases AzCopyRunner AzCopySettings AzCopySettingsExtensions Enums BlobType FileHandling PayloadFormat"
  },
  "api/Cake.AzCopy.AzCopyRunner.html": {
    "href": "api/Cake.AzCopy.AzCopyRunner.html",
    "title": "Class AzCopyRunner | Cake.AzCopy",
    "keywords": "Class AzCopyRunner Inheritance System.Object Cake.Core.Tooling.Tool < AzCopySettings > AzCopyRunner Inherited Members Cake.Core.Tooling.Tool<Cake.AzCopy.AzCopySettings>.Run(Cake.AzCopy.AzCopySettings, Cake.Core.IO.ProcessArgumentBuilder) Cake.Core.Tooling.Tool<Cake.AzCopy.AzCopySettings>.Run(Cake.AzCopy.AzCopySettings, Cake.Core.IO.ProcessArgumentBuilder, Cake.Core.IO.ProcessSettings, System.Action<Cake.Core.IO.IProcess>) Cake.Core.Tooling.Tool<Cake.AzCopy.AzCopySettings>.ProcessExitCode(System.Int32) Cake.Core.Tooling.Tool<Cake.AzCopy.AzCopySettings>.RunProcess(Cake.AzCopy.AzCopySettings, Cake.Core.IO.ProcessArgumentBuilder) Cake.Core.Tooling.Tool<Cake.AzCopy.AzCopySettings>.RunProcess(Cake.AzCopy.AzCopySettings, Cake.Core.IO.ProcessArgumentBuilder, Cake.Core.IO.ProcessSettings) Cake.Core.Tooling.Tool<Cake.AzCopy.AzCopySettings>.GetWorkingDirectory(Cake.AzCopy.AzCopySettings) Cake.Core.Tooling.Tool<Cake.AzCopy.AzCopySettings>.GetAlternativeToolPaths(Cake.AzCopy.AzCopySettings) Cake.Core.Tooling.Tool<Cake.AzCopy.AzCopySettings>.GetEnvironmentVariables(Cake.AzCopy.AzCopySettings) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Cake.AzCopy Assembly : Cake.AzCopy.dll Syntax public class AzCopyRunner : Tool<AzCopySettings> Constructors | Improve this Doc View Source AzCopyRunner(ICakeContext) Declaration public AzCopyRunner(ICakeContext ctx) Parameters Type Name Description Cake.Core.ICakeContext ctx | Improve this Doc View Source AzCopyRunner(IFileSystem, ICakeEnvironment, IProcessRunner, IToolLocator, ICakeLog) Declaration public AzCopyRunner(IFileSystem fileSystem, ICakeEnvironment environment, IProcessRunner processRunner, IToolLocator tools, ICakeLog log) Parameters Type Name Description Cake.Core.IO.IFileSystem fileSystem Cake.Core.ICakeEnvironment environment Cake.Core.IO.IProcessRunner processRunner Cake.Core.Tooling.IToolLocator tools Cake.Core.Diagnostics.ICakeLog log Methods | Improve this Doc View Source GetToolExecutableNames() Declaration protected override IEnumerable<string> GetToolExecutableNames() Returns Type Description System.Collections.Generic.IEnumerable < System.String > Overrides Cake.Core.Tooling.Tool<Cake.AzCopy.AzCopySettings>.GetToolExecutableNames() | Improve this Doc View Source GetToolName() Declaration protected override string GetToolName() Returns Type Description System.String Overrides Cake.Core.Tooling.Tool<Cake.AzCopy.AzCopySettings>.GetToolName() | Improve this Doc View Source RunTool(String, String, AzCopySettings) Declaration public void RunTool(string source, string destination, AzCopySettings settings) Parameters Type Name Description System.String source System.String destination AzCopySettings settings"
  },
  "api/Cake.AzCopy.AzCopySettingsExtensions.html": {
    "href": "api/Cake.AzCopy.AzCopySettingsExtensions.html",
    "title": "Class AzCopySettingsExtensions | Cake.AzCopy",
    "keywords": "Class AzCopySettingsExtensions Inheritance System.Object AzCopySettingsExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Cake.AzCopy Assembly : Cake.AzCopy.dll Syntax public static class AzCopySettingsExtensions Methods | Improve this Doc View Source AddResponseFile(AzCopySettings, FilePath) Declaration public static AzCopySettings AddResponseFile(this AzCopySettings settings, FilePath responseFile) Parameters Type Name Description AzCopySettings settings Cake.Core.IO.FilePath responseFile Returns Type Description AzCopySettings | Improve this Doc View Source CopyRecursively(AzCopySettings, Boolean) Declaration public static AzCopySettings CopyRecursively(this AzCopySettings settings, bool recursive = true) Parameters Type Name Description AzCopySettings settings System.Boolean recursive Returns Type Description AzCopySettings | Improve this Doc View Source EnableChecksums(AzCopySettings, Boolean) Declaration public static AzCopySettings EnableChecksums(this AzCopySettings settings, bool enablemd5 = true) Parameters Type Name Description AzCopySettings settings System.Boolean enablemd5 Returns Type Description AzCopySettings | Improve this Doc View Source LogToFile(AzCopySettings, FilePath) Declaration public static AzCopySettings LogToFile(this AzCopySettings settings, FilePath logFile) Parameters Type Name Description AzCopySettings settings Cake.Core.IO.FilePath logFile Returns Type Description AzCopySettings | Improve this Doc View Source SetBlobType(AzCopySettings, BlobType) Declaration public static AzCopySettings SetBlobType(this AzCopySettings settings, BlobType type) Parameters Type Name Description AzCopySettings settings BlobType type Returns Type Description AzCopySettings | Improve this Doc View Source SetBlobType(AzCopySettings, String) Declaration public static AzCopySettings SetBlobType(this AzCopySettings settings, string blobType) Parameters Type Name Description AzCopySettings settings System.String blobType Returns Type Description AzCopySettings | Improve this Doc View Source SetConcurrentOperationsCount(AzCopySettings, Int32) Declaration public static AzCopySettings SetConcurrentOperationsCount(this AzCopySettings settings, int count) Parameters Type Name Description AzCopySettings settings System.Int32 count Returns Type Description AzCopySettings | Improve this Doc View Source SetContentType(AzCopySettings, String) Declaration public static AzCopySettings SetContentType(this AzCopySettings settings, string contentType) Parameters Type Name Description AzCopySettings settings System.String contentType Returns Type Description AzCopySettings | Improve this Doc View Source SetFileBehaviour(AzCopySettings, FileHandling) Declaration public static AzCopySettings SetFileBehaviour(this AzCopySettings settings, FileHandling behaviour) Parameters Type Name Description AzCopySettings settings FileHandling behaviour Returns Type Description AzCopySettings | Improve this Doc View Source SetPayloadFormat(AzCopySettings, PayloadFormat) Declaration public static AzCopySettings SetPayloadFormat(this AzCopySettings settings, PayloadFormat format) Parameters Type Name Description AzCopySettings settings PayloadFormat format Returns Type Description AzCopySettings | Improve this Doc View Source SetPayloadFormat(AzCopySettings, String) Declaration public static AzCopySettings SetPayloadFormat(this AzCopySettings settings, string payloadFormat) Parameters Type Name Description AzCopySettings settings System.String payloadFormat Returns Type Description AzCopySettings | Improve this Doc View Source UseDelimiter(AzCopySettings, Char) Declaration public static AzCopySettings UseDelimiter(this AzCopySettings settings, char delimiter) Parameters Type Name Description AzCopySettings settings System.Char delimiter Returns Type Description AzCopySettings | Improve this Doc View Source UseDestinationAccountKey(AzCopySettings, String) Declaration public static AzCopySettings UseDestinationAccountKey(this AzCopySettings settings, string accountKey) Parameters Type Name Description AzCopySettings settings System.String accountKey Returns Type Description AzCopySettings | Improve this Doc View Source UseDestinationSignature(AzCopySettings, String) Declaration public static AzCopySettings UseDestinationSignature(this AzCopySettings settings, string sas) Parameters Type Name Description AzCopySettings settings System.String sas Returns Type Description AzCopySettings | Improve this Doc View Source UsePattern(AzCopySettings, String) Declaration public static AzCopySettings UsePattern(this AzCopySettings settings, string pattern) Parameters Type Name Description AzCopySettings settings System.String pattern Returns Type Description AzCopySettings | Improve this Doc View Source UseSourceAccountKey(AzCopySettings, String) Declaration public static AzCopySettings UseSourceAccountKey(this AzCopySettings settings, string accountKey) Parameters Type Name Description AzCopySettings settings System.String accountKey Returns Type Description AzCopySettings | Improve this Doc View Source UseSourceSignature(AzCopySettings, String) Declaration public static AzCopySettings UseSourceSignature(this AzCopySettings settings, string sas) Parameters Type Name Description AzCopySettings settings System.String sas Returns Type Description AzCopySettings"
  },
  "api/Cake.AzCopy.BlobType.html": {
    "href": "api/Cake.AzCopy.BlobType.html",
    "title": "Enum BlobType | Cake.AzCopy",
    "keywords": "Enum BlobType Namespace : Cake.AzCopy Assembly : Cake.AzCopy.dll Syntax public enum BlobType Fields Name Description Append Block Page"
  }
}